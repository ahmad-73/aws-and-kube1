name: CI pipeline

on:
    pull_request:
      branches: [main]
    push:
      branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [15.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Node.js ${{ matrix.node-version}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version}}
          cache: 'npm'
          cache-dependency-path: codebase/rdicidr-0.1.0/package-lock.json

      - name: Install dependencies
        working-directory: codebase/rdicidr-0.1.0
        run: npm install --ignore-engines

      - name: Run linter (ESLint)
        working-directory: codebase/rdicidr-0.1.0
        run: npm run lint

      - name: Run formatter (Prettier)
        working-directory: codebase/rdicidr-0.1.0
        run: npm run prettier

      - name: Run tests (Jest)
        working-directory: codebase/rdicidr-0.1.0
        run:  CI=true npm run test -- --watchAll=false --coverage

      - name: Build application
        working-directory: codebase/rdicidr-0.1.0
        run: npm run build

      - name: Build Docker image
        working-directory: codebase/rdicidr-0.1.0
        run: docker build -t rdicidr:${{ github.sha }} .

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        working-directory: codebase/rdicidr-0.1.0
        run: |
          docker tag rdicidr-0.1.0 ${{ secrets.DOCKER_USERNAME }}/rdicidr-0.1.0:latest
          docker tag rdicidr-0.1.0 ${{ secrets.DOCKER_USERNAME }}/rdicidr-0.1.0:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/rdicidr-0.1.0:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/rdicidr-0.1.0:${{ github.sha }}
